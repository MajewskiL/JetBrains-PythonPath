#  https://hyperskill.org/projects/159?track=2

from sqlalchemy import create_engine
from sqlalchemy import Column, Integer, String
from sqlalchemy.ext.declarative import declarative_base
from sqlalchemy.orm import sessionmaker

engine = create_engine('sqlite:///flashcard.db?check_same_thread=False')
Base = declarative_base()
boxes = 0


class FlashCard(Base):
    __tablename__ = 'flashcard'
    id = Column(Integer, primary_key=True)
    question = Column(String)
    answer = Column(String)
    box = Column(Integer)


def add_flashcard():
    question, answer = "", ""
    while question == "":
        question = input("Question: ")
    while answer == "":
        answer = input("Answer: ")
    new_data = FlashCard(question=question, answer=answer, box=1)
    session.add(new_data)
    session.commit()


def update(card):
    while True:
        print('press "d" to delete the flashcard:\npress "e" to edit the flashcard:\n')
        ans = input()
        if ans == "d":
            session.delete(card)
            session.commit()
            return
        elif ans == "e":
            print(f"current question: {card.question}")
            question = input("please write a new question:")
            print(f"current answer: {card.answer}")
            answer = input("please write a new answer:")
            card.answer = answer
            card.question = question
            session.commit()
            return
        else:
            print(f"{ans} is not an option")


def practice():
    global boxes
    cards = session.query(FlashCard).all()
    if len(cards) == 0:
        print("There is no flashcard to practice!")
        return
    for box in range(boxes + 1):
        for card in cards:
            if card.box == box + 1:
                print(f"\nQuestion: {card.question}")
                ans = input('press "y" to see the answer:\npress "n" to pass:\npress "u" to update:\n')
                if ans in ("y", "n"):
                    if ans == "y":
                        print(f"\nAnswer: {card.answer}")
                    elif ans == "n":
                        pass
                    while True:
                        print('press "y" if your answer is correct:\npress "n" if your answer is wrong:\n')
                        ans2 = input()
                        if ans2 == 'y':
                            card.box = card.box + 1
                            if card.box == 4:
                                session.delete(card)
                                session.commit()
                            else:
                                session.commit()
                            break
                        elif ans2 == "n":
                            card.box = card.box - 1
                            if card.box == 0:
                                card.box = 1
                                session.commit()
                            else:
                                session.commit()
                            break
                        else:
                            print(f"{ans2} is not an option")
                elif ans == "u":
                    update(card)
                else:
                    print(f"{ans} is not an option")
    boxes = (boxes + 1) % 3


Base.metadata.create_all(engine)
Session = sessionmaker(bind=engine)
session = Session()

menu = "0"
while menu != "3":
    print("1. Add flashcards\n2. Practice flashcards\n3. Exit\n")
    menu = input()
    if menu == "1":
        menu_1 = "0"
        while menu_1 != "2":
            print("1. Add a new flashcard\n2. Exit\n")
            menu_1 = input()
            if menu_1 == "1":
                add_flashcard()
            elif menu_1 == "2":
                pass
            else:
                print(f"{menu_1} is not an option")
    elif menu == "2":
        practice()
    elif menu == "3":
        pass
    else:
        print(f"{menu} is not an option")
print("Bye!")
